{"ast":null,"code":"var _jsxFileName = \"/home/usuario/Projects/Projetos/sd-013-b-project-starwars-planets-search/src/components/table.jsx\";\nimport React, { useContext } from 'react';\nimport StarWarsContext from '../context/starWarsContext';\nconst filtros = ['Name', 'Rotation Period', 'Orbital Period', 'Diameter', 'Climate', 'Gravity', 'Terrain', 'Surface water', 'Population', 'Films', 'Created', 'Edited', 'URL'];\n\nfunction Table() {\n  const {\n    data,\n    // filters: { filterNames, filterValues },\n    clicked\n  } = useContext(StarWarsContext);\n  const {\n    name\n  } = filterNames;\n  const filtersValues = filterValues[filterValues.length - 1];\n  const {\n    column,\n    comparison,\n    value\n  } = filtersValues;\n  return /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, filtros.map((header, index) => /*#__PURE__*/React.createElement(\"th\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, header)))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, data.filter(planet => planet.name.includes(name)).filter(planet => {\n    if (clicked && comparison === 'maior que') {\n      return Number(planet[column]) > value;\n    }\n\n    if (clicked && comparison === 'menor que') {\n      return Number(planet[column] < value) || planet[column] === 'unknown';\n    }\n\n    if (clicked && comparison === 'igual a') {\n      return Number(planet[column] === value);\n    }\n\n    return data;\n  }).map(planet => /*#__PURE__*/React.createElement(\"tr\", {\n    key: planet.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, planet.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, planet.rotation_period), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, planet.orbital_period), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, planet.diameter), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, planet.climate), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, planet.gravity), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, planet.terrain), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, planet.surface_water), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, planet.population), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, planet.films), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, planet.created), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, planet.edited), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, planet.url)))));\n}\n\nexport default Table;","map":{"version":3,"sources":["/home/usuario/Projects/Projetos/sd-013-b-project-starwars-planets-search/src/components/table.jsx"],"names":["React","useContext","StarWarsContext","filtros","Table","data","clicked","name","filterNames","filtersValues","filterValues","length","column","comparison","value","map","header","index","filter","planet","includes","Number","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","edited","url"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\n\nimport StarWarsContext from '../context/starWarsContext';\n\nconst filtros = [\n  'Name',\n  'Rotation Period',\n  'Orbital Period',\n  'Diameter',\n  'Climate',\n  'Gravity',\n  'Terrain',\n  'Surface water',\n  'Population',\n  'Films',\n  'Created',\n  'Edited',\n  'URL',\n];\n\nfunction Table() {\n  const {\n    data,\n    // filters: { filterNames, filterValues },\n    clicked,\n  } = useContext(StarWarsContext);\n  const { name } = filterNames;\n  const filtersValues = filterValues[filterValues.length - 1];\n  const { column, comparison, value } = filtersValues;\n\n  return (\n    <table>\n      <tbody>\n        <tr>\n          {filtros.map((header, index) => (\n            <th key={ index }>\n              {header}\n            </th>))}\n        </tr>\n      </tbody>\n\n      <tbody>\n        {data.filter((planet) => planet.name.includes(name))\n          .filter((planet) => {\n            if (clicked && comparison === 'maior que') {\n              return Number(planet[column]) > value;\n            }\n            if (clicked && comparison === 'menor que') {\n              return Number(planet[column] < value)\n              || planet[column] === 'unknown';\n            }\n            if (clicked && comparison === 'igual a') {\n              return Number(planet[column] === value);\n            }\n            return data;\n          })\n          .map((planet) => (\n            <tr key={ planet.name }>\n              <td>{ planet.name }</td>\n              <td>{ planet.rotation_period }</td>\n              <td>{ planet.orbital_period }</td>\n              <td>{ planet.diameter }</td>\n              <td>{ planet.climate }</td>\n              <td>{ planet.gravity }</td>\n              <td>{ planet.terrain }</td>\n              <td>{ planet.surface_water }</td>\n              <td>{ planet.population }</td>\n              <td>{ planet.films }</td>\n              <td>{ planet.created }</td>\n              <td>{ planet.edited }</td>\n              <td>{ planet.url }</td>\n            </tr>\n          ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}